---
description: 
globs: 
alwaysApply: false
---
# Turborepo 모노레포 셋업 가이드

### 프로젝트 개요
3개의 프로젝트를 하나의 모노레포로 관리하기 위한 Turborepo 셋업 가이드입니다.

### 프로젝트 구성

Production (Next.js): 메인 프로덕션 서비스
Admin BO (React): 백오피스 어드민
Admin PO (React): 파트너 오피스 어드민

### 프로젝트 구조
├── apps/             # 프론트엔드 모노레포
│   ├── nugu/   # Next.js 메인 서비스
│   ├── admin-bo/    # 백오피스 어드민
│   └── admin-po/    # 파트너 오피스 어드민
│   ├── packages/     # 공통 패키지들
│       ├── shared/       # 공통 hooks, utils
│       ├── ui/           # 공통 컴포넌트
│       ├── admin-ui/     # 어드민 전용 컴포넌트
│       ├── design-tokens/ # Tailwind CSS, 디자인 토큰
│       ├── eslint-config/ # 공통 ESLint 설정
│       └── prettier-config/ # 공통 Prettier 설정
├── server/           # 백엔드 서비스
└── docs/            # 문서
```

### 기술 스택
- **모노레포 도구**: Turborepo
- **패키지 매니저**: PNPM (workspace 기능 활용)
- **빌드 도구**: Turbo + Vite/Next.js
- **CI/CD**: GitHub Actions (또는 선택한 CI 도구)
- **코드 품질**: ESLint + Prettier (공통 설정)

### 주요 요구사항

공통 코드 관리: hooks, utils 등을 3개 프로젝트에서 공유
어드민 전용 컴포넌트: BO/PO에서만 사용하는 컴포넌트 분리
디자인 토큰 공유: Tailwind CSS 설정을 모든 프로젝트에서 공유
개발 환경 통일: ESLint, Prettier 설정 공유 및 프로젝트별 커스터마이징
선택적 실행: 서버 코드 제외하고 프론트엔드만 실행 가능
개발 셋팅: /server 폴더를 제외하고 /apps폴더에서만 독립적으로 실행할 수 있도록 셋팅

### 설정의 장점

#### 1. **유연한 확장성**
- 공통 설정을 베이스로 하고 각 프로젝트별 커스터마이징 가능
- Next.js와 React 환경 모두 지원

#### 2. **일관된 코드 스타일**
- 모든 프로젝트에서 동일한 기본 룰 적용
- 팀 전체의 코드 품질 향상

#### 3. **유지보수 효율성**
- 공통 설정 변경 시 모든 프로젝트에 자동 반영
- 중복 설정 제거

#### 4. **프로젝트별 특화**
- Next.js는 Next.js 전용 룰 추가
- 어드민 앱은 더 관대한 console 룰 등

